What are the three main design advantages that object orientation can provide? 

Explain each concept.

Abstraction - Let Python worry about it, you're a lazy programmer!
Encapsulation - Keep all the things together.
Polymorphism - It doesn't have to be the exact same thing, it can still share behaviors.

What is a class?

A class is the idea of an object.

What is an instance attribute?

Some property of the instantiation of a class. Going from the superclass Pet 
and subclass Cat example from lecture, an instance would be something written on
a post it note on the actual physical instance of cat. 

What is a method?

A method is a function defined in a class.

What is an instance in object orientation?

An instance is the actual object created by the __init___ constructor. 
In the lecture example, it wouldn't be the idea of a Pet or the idea of a Cat;
rather, it would be this actual cat, Mini, who grunts instead of meows
and has crossed eyes.

How is a class attribute different than an instance attribute? Give an example of when you might use each.

A class attribute is something that applies to that class. For example, if there's a
Cat class, the class attributes would be properties all cats share and the
actual instance of a Cat could have additional instance attributes or instance 
attributes that you want to take precedence over Cat class attributes.